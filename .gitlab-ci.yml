image: barichello/godot-ci:3.2.3

# Cache imported assets between runs
cache:
  key: import-assets
  paths:
    - .import/

stages:
  - export
  - deploy
  - notification

variables:
  PROJECT_DIRECTORY: project
  EXPORT_NAME: wojowniczy_myszojelen
  LINK_ARTIFACT: true

linux:
  stage: export
  script:
    - mkdir -v -p build/linux
    - cd $PROJECT_DIRECTORY
    - godot -v --export "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/linux
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "release"'
      when: on_success

windows:
  stage: export
  script:
    - mkdir -v -p build/windows
    - cd $PROJECT_DIRECTORY
    - godot -v --export "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/windows
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "release"'
      when: on_success

web:
  stage: export
  script:
    - mkdir -v -p build/web
    - cd $PROJECT_DIRECTORY
    - godot -v --export "HTML5" ../build/web/index.html
  artifacts:
    name: $EXPORT_NAME-$CI_JOB_NAME
    paths:
      - build/web
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "release"'
      when: on_success
      

deploy-github-pages:
  stage: deploy
  dependencies:
    - web
  script:
    # This ensures the `gh-pages` branch is available.
    - git fetch
    - git checkout gh-pages
    - rm -f *.md
    - mv build/web/** .
    - git config user.email $GIT_EMAIL
    - git config user.name $GIT_USERNAME
    - git remote add github $REMOTE_URL
    - git add -A
    - 'git commit -m "ci: Deploy GitHub Page | $EXPORT_NAME:$CI_JOB_NAME" -m "Deploy from GitLab pipeline #$CI_PIPELINE_ID" || true'
    - git push github gh-pages -f
  only:
      - release

# Itch.io Deploy
itchio:linux:
  stage: deploy
  script:
    - butler push ./build/linux $ITCHIO_USERNAME/$ITCHIO_GAME:linux
  dependencies:
    - linux
  only:
    - release

itchio:windows:
  stage: deploy
  script:
    - butler push ./build/windows $ITCHIO_USERNAME/$ITCHIO_GAME:windows
  dependencies:
    - windows
  only:
      - release

itchio:web:
  stage: deploy
  script:
    - butler push ./build/web $ITCHIO_USERNAME/$ITCHIO_GAME:web
  dependencies:
    - web
  only:
      - release

success_notification:
  stage: notification
  script:
    - apt-get update -qq
    - apt-get -qq -y install curl
    - wget https://raw.githubusercontent.com/Flying-Octopus-Team/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh success $WEBHOOK_URL
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - if: '$CI_COMMIT_BRANCH == "release"'
      when: on_success


failure_notification:
  stage: notification
  script:
    - apt-get update -qq
    - apt-get -qq -y install curl
    - wget https://raw.githubusercontent.com/Flying-Octopus-Team/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - ./send.sh failure $WEBHOOK_URL
  rules:
    - if: '$CI_PIPELINE_SOURCE == "external_pull_request_event"'
      when: on_failure
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_failure
    - if: '$CI_COMMIT_BRANCH == "release"'
      when: on_failure
